apply from: file("${rootDir}/gradle/project.gradle")

subprojects {
    group = 'core.framework'
    version = '8.0.12-b0'

    repositories {
        maven {
            url 'https://neowu.github.io/maven-repo/'
            content {
                includeGroupByRegex 'core\\.framework.*'       // for elasticsearch modules dependencies
            }
        }
    }
}

def elasticVersion = '8.6.0'
def kafkaVersion = '3.3.1'
def jacksonVersion = '2.14.1'
def junitVersion = '5.9.2'
def mockitoVersion = '5.0.0'
def assertjVersion = '3.24.1'
def mysqlVersion = '8.0.31'

project('core-ng-api') {
    apply from: file("${rootDir}/gradle/lib.gradle")
}

project('core-ng') {
    apply from: file("${rootDir}/gradle/lib.gradle")
    dependencies {
        api project(':core-ng-api')
        api 'org.slf4j:slf4j-api:2.0.6'
        implementation 'org.javassist:javassist:3.29.2-GA'
        implementation "com.fasterxml.jackson.module:jackson-module-afterburner:${jacksonVersion}"
        implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
        implementation 'com.squareup.okhttp3:okhttp:4.10.0'
        implementation 'io.undertow:undertow-core:2.3.1.Final'
        implementation "org.apache.kafka:kafka-clients:${kafkaVersion}@jar"
        implementation 'org.xerial.snappy:snappy-java:1.1.8.4'      // used by kafka message compression
        compileOnly "com.mysql:mysql-connector-j:${mysqlVersion}"
        compileOnly 'org.jboss.logging:jboss-logging-annotations:2.2.1.Final'
        testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
        testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
        testImplementation "org.mockito:mockito-inline:${mockitoVersion}"
        testImplementation "org.assertj:assertj-core:${assertjVersion}"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
        testRuntimeOnly 'org.hsqldb:hsqldb:2.7.1'
    }
}

project('core-ng-test') {
    apply from: file("${rootDir}/gradle/lib.gradle")
    dependencies {
        api "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
        api "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
        api "org.mockito:mockito-inline:${mockitoVersion}"
        api "org.assertj:assertj-core:${assertjVersion}"
        implementation project(":core-ng")
        implementation "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
        testRuntimeOnly 'org.hsqldb:hsqldb:2.7.1'
    }
}

project('core-ng-mongo') {
    apply from: file("${rootDir}/gradle/lib.gradle")
    dependencies {
        api project(":core-ng")
        api 'org.mongodb:mongodb-driver-sync:4.8.1'
        testImplementation project(":core-ng-test")
    }
}

project('core-ng-mongo-test') {
    apply from: file("${rootDir}/gradle/lib.gradle")
    dependencies {
        implementation project(':core-ng-test')
        implementation project(':core-ng-mongo')
        implementation 'de.bwaldvogel:mongo-java-server:1.43.0'
    }
}

project('core-ng-search') {
    apply from: file("${rootDir}/gradle/lib.gradle")
    dependencies {
        api project(':core-ng')
        api "co.elastic.clients:elasticsearch-java:${elasticVersion}"
        implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
        testImplementation project(':core-ng-test')
    }
}

project('core-ng-search-test') {
    apply from: file("${rootDir}/gradle/lib.gradle")
    dependencies {
        implementation project(':core-ng-test')
        implementation project(':core-ng-search')
        implementation "org.elasticsearch:elasticsearch:${elasticVersion}"
        implementation "core.framework.elasticsearch.module:transport-netty4:${elasticVersion}"
        implementation "core.framework.elasticsearch.module:mapper-extras:${elasticVersion}"    // used by elasticsearch scaled_float
        implementation "core.framework.elasticsearch.module:lang-painless:${elasticVersion}"
        implementation "core.framework.elasticsearch.module:analysis-common:${elasticVersion}"  // used by elasticsearch stemmer
        implementation "core.framework.elasticsearch.module:reindex:${elasticVersion}"          // used by elasticsearch deleteByQuery
    }
}

def mavenURL = hasProperty('mavenURL') ? mavenURL : null    // usage: "gradlew -PmavenURL=/path clean publish"

configure(subprojects.findAll { it.name.startsWith('core-ng') }) {
    apply plugin: 'maven-publish'
    if (mavenURL != null) {
        assert project.file(mavenURL).exists()
        publishing {
            publications {
                maven(MavenPublication) {
                    from components.java
                }
            }
            repositories {
                maven { url mavenURL }
            }
        }
    }
}
